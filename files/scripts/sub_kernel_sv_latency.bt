BEGIN
{
  @sv_ether_proto = 47752;
  @t3 = 0;
  @tsub_threshold = $1;
  @sv_iteration = 0;
}

kprobe:tpacket_rcv
{
  $skb = (struct sk_buff *)arg0;
  $data_sv_counter = $skb->head + $skb->mac_header;
  $data_sv_counter += 51;
  $sv_counter = 0;
  $protocol = $skb->protocol;
  if ($protocol == @sv_ether_proto) {

    @t3 = nsecs(tai);
    $data_sv_counter = $skb->head + $skb->mac_header;
    $data_sv_counter += 51;

    unroll(2) {
      $sv_counter = ($sv_counter << 8) + *(uint8 *)$data_sv_counter;
      $data_sv_counter += 1;
    }

    if($sv_counter != @old_sv_counter){
      if($sv_counter < @old_sv_counter){
        @sv_iteration += 1;
      }
      @old_sv_counter = $sv_counter;
    }
  }
}

kprobe:tpacket_get_timestamp
{
  $skb = (struct sk_buff *)arg0;
  $protocol = $skb->protocol;

  if ($protocol == @sv_ether_proto) {
    $t4 = nsecs(tai);
    $tsub = ($t4 - @t3)/1000;

    if ($tsub >= @tsub_threshold){
      printf("T3:%-llu:T4:%-llu SV %d iteration %d Tsub %-lluus > %dus in %s (%s pid %d)\n", @t3/1000, $t4/1000,
      @old_sv_counter, @sv_iteration, $tsub, @tsub_threshold, func, comm, pid);
    }
  }
}
