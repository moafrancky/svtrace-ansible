BEGIN
{
  @sv_ether_proto = (uint64)47752;
  @old_sv_counter_skb_push = (uint64)$4;
  @old_sv_counter_consume_skb = (uint64)$4;

  @sv_irq_interface_pid = (uint64)$1;
  @vhost_pid = (uint64)$2;
  @thyp_threshold = (uint64)$3;
  @sv_iteration_skb_push = 0;
  @sv_iteration_consume_skb = 0;
}

kprobe:skb_push
{
  $skb = (struct sk_buff*)arg0;
  $protocol = $skb->protocol;
  $sv_counter = (uint64)0;
  $stream_id = (uint64)0;

  if ($protocol == @sv_ether_proto) {
    if(pid == @sv_irq_interface_pid){
      $data_sv_counter = $skb->head + $skb->mac_header;
      $data_stream_id = $skb->head + $skb->mac_header;
      $data_sv_counter += 43;
      $data_stream_id += 33;

      unroll(2) {
        $sv_counter = ($sv_counter << 8) + *(uint8 *)$data_sv_counter;
        $data_sv_counter += 1;
      }
      unroll(8) {
        $stream_id = ($stream_id << 8) + *(uint8 *)$data_stream_id;
        $data_stream_id += 1;
      }
      @t1[$stream_id, $sv_counter, @sv_iteration_skb_push] = nsecs(tai);

      if($sv_counter != @old_sv_counter_skb_push){
        if($sv_counter < @old_sv_counter_skb_push){
          @sv_iteration_skb_push += 1;
        }
        @old_sv_counter_skb_push = $sv_counter;
      }
    }
  }
}

kprobe:consume_skb
{
  $skb = (struct sk_buff*)arg0;
  $protocol = $skb->protocol;
  $sv_counter = (uint64)0;
  $stream_id = (uint64)0;

  if ($protocol == @sv_ether_proto) {
    if(pid == @vhost_pid){
      $data_sv_counter = $skb->head + $skb->mac_header;
      $data_stream_id = $skb->head + $skb->mac_header;
      $data_sv_counter += 43;
      $data_stream_id += 33;

      unroll(2) {
        $sv_counter = ($sv_counter << 8) + *(uint8 *)$data_sv_counter;
        $data_sv_counter += 1;
      }
      unroll(8) {
        $stream_id = ($stream_id << 8) + *(uint8 *)$data_stream_id;
        $data_stream_id += 1;
      }
      $t2 = nsecs(tai);
      $thyp = ($t2 - @t1[$stream_id, $sv_counter, @sv_iteration_consume_skb])/1000;
      delete(@t1[$stream_id, $sv_counter, @sv_iteration_consume_skb]);

      if($sv_counter != @old_sv_counter_consume_skb){
        if($sv_counter < @old_sv_counter_consume_skb){
          @sv_iteration_consume_skb += 1;
        }
        @old_sv_counter_consume_skb = $sv_counter;
      }
      if ($thyp >= @thyp_threshold){
        printf("SV %d-%d-%d Thyp %-lluus\n", @sv_iteration_consume_skb, $stream_id, $sv_counter, $thyp);
      }
    }
  }
}
