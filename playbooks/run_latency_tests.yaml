---
- name: Prepare localhost
  hosts:
    localhost
  tasks:
    - name: Record start time of the test
      shell:
        cmd: >-
          echo Test started at $(echo `date +'%T'`) > ../tests_results/time

- name: Prepare publisher and receiver
  become: true
  vars:
    - first_SV: 1096
  hosts:
    - publisher
    - subscriber
  tasks:
      - name: Send SV timestamp logger
        copy:
          src: ../files/sv_timestamp_logger.tar
          dest: /tmp/sv_timestamp_logger.tar
      - name: Load SV timestamp logger
        command: docker image load -i /tmp/sv_timestamp_logger.tar
      - name : Run SV timestamp logger container
        command:
          docker run --privileged \
          -d \
          -v /tmp:/tmp \
          --cpuset-cpus={{ sv_ts_core }} \
          --name sv_timestamp_logger \
          --network=host sv_timestamp_logger \
          -d {{sv_interface}} \
          -f /tmp/{{ sv_file }} \
          --first_SV_cnt \ {{first_SV}} \
           --max_SV_cnt 4000
      - name: Set FIFO scheduling on SV timestamp logger process
        shell:
          PID=$(ps -eTo comm,pid |grep sv_timestamp_lo|cut -d' ' -f2)
          chrt --fifo -p 1 $PID

- name: Start test
  become: true
  hosts:
    publisher
  vars:
    - pcap_file: Df_Tri_Z1
  tasks:
      - name: Send SV
        command: chrt --fifo 1 taskset -c 4 bittwist -i {{ sv_interface }} /pcap/{{ pcap_file }}.pcap -l {{ pcap_cycles }}

- name: End test
  become: true
  hosts:
    - publisher
    - subscriber
  tasks:
      - name: Stop SV timestamp logger
        command:
          docker stop sv_timestamp_logger
      - name: Compute results
        shell:
          cmd: >-
            docker logs sv_timestamp_logger > /tmp/sv_drops
      - name: Fetch sv drop
        fetch:
          src: /tmp/sv_drops
          dest: ../tests_results/
          flat: true
      - name: Remove SV timestamp logger
        command:
          docker rm sv_timestamp_logger
      - name: Fetch SV timestamps
        fetch:
          src: /tmp/{{ sv_file }}
          dest: ../tests_results/
          flat: true

- name: Fetch logs
  become: true
  hosts:
    - publisher
    - hypervisors
    - subscriber
  tasks:
      - name: Extract PTP logs
        shell:
          cmd: >-
            journalctl -b -u {{ item }}.service > /tmp/{{ item }}_{{ inventory_hostname }}
        with_items:
          - ptp4l
          - phc2sys
      - name: Fetch PTP logs
        fetch:
          src: /tmp/{{ item }}_{{ inventory_hostname }}
          dest: ../tests_results/
          flat: true
        with_items:
          - ptp4l
          - phc2sys

- name: Compute results
  hosts:
    - localhost
  tasks:
    - name: Record end time of the test
      shell:
        cmd: >-
          echo Test ended at $(echo `date +'%T'`) >> ../tests_results/time
    - name: Set publisher host variable
      set_fact:
        publisher_sv_file: "{{ hostvars[groups['publisher'][0]].sv_file }}"
    - name: Generate latency report
      command:
        python3 ../files/scripts/generate_latency_report.py  \
        -s ../tests_results/{{ hostvars[item].sv_file }} \
        -p ../tests_results/{{ publisher_sv_file }} \
        -o ../tests_results
      with_items: "{{ groups['subscriber'] }}"