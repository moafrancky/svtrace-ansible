# Copyright (C) 2024, RTE (http://www.rte-france.com)
# Copyright (C) 2024 Savoir-faire Linux, Inc.
# SPDX-License-Identifier: Apache-2.0
---
- name: Prepare localhost
  hosts:
    localhost
  tasks:
    - name: Create tests results directory
      file:
        path: ../tests_results
        state: directory
    - name: Create tests results sub directory
      file:
        path: ../tests_results/{{ item }}
        state: directory
      with_items:
        - pacing
        - ptp
        - latency
        - data
    - name: Record start time of the test
      shell:
        cmd: >-
          echo Test started at $(echo `date +'%T'`) > ../tests_results/data/time

- name: Launch bpftrace on hypervisors
  become: true
  hosts:
    - hypervisors
  vars_files:
    - ../vars/threshold.yaml
  tasks:
      - name : Run bpftrace script
        shell:
          cmd: >-
            taskset -c {{ bpftrace_core }} svtrace.py --record --conf /etc/svtrace.cfg --machine hypervisor
        async: 9999999
        poll: 0
        when: enable_bpftrace is defined and enable_bpftrace|bool == true
- name: Launch bpftrace on subscriber
  become: true
  hosts:
    - subscriber
  vars_files:
    - ../vars/threshold.yaml
  tasks:
      - name : Run bpftrace script
        shell:
          cmd: >-
            taskset -c {{ bpftrace_core }} svtrace.py --record --conf /etc/svtrace.cfg --machine VM
        async: 9999999
        poll: 0
        when: enable_bpftrace is defined and enable_bpftrace|bool == true
      - name: Make sure bpftrace has time to start
        wait_for:
          timeout: 5
        when: enable_bpftrace is defined and enable_bpftrace|bool == true
- name: Prepare publisher and receiver
  hosts:
    - publisher
    - subscriber
    - hypervisors
  tasks:
    - name: Gather ansible_user_dir fact
      setup:
        filter: ansible_user_dir

    - name: Run sv_timestamp_logger
      include_role:
        name: "run_sv_timestamp_logger"

- name: Start test
  hosts:
    publisher
  tasks:
      - name: Send SV
        command: chrt --fifo 1 taskset -c {{ bittwist_core }} bittwist -i {{ sv_interface }} {{ pcap_path }}{{ pcap_file }} -l {{ pcap_loop }}

- name: End test
  hosts:
    - publisher
    - subscriber
    - hypervisors
  tasks:
    - name: End sv_timestamp_logger
      include_role:
        name: "end_sv_timestamp_logger"
- name: Compute results
  hosts:
    localhost
  tasks:
    - name: Build_sv_timestamp_analysis
      include_role:
        name: "build_sv_timestamp_analysis"
    - name: Generate sv_timestamp_results
      include_role:
        name: "generate_sv_timestamp_results"


- name: Cleanup svtrace on hypervisor
  become: true
  hosts:
    - hypervisors
  tasks:
      - name: End svtrace
        command:
            killall --wait "svtrace.py" --signal SIGINT
        when: enable_bpftrace is defined and enable_bpftrace|bool == true
      - name: Fetch svtrace result file
        synchronize:
          src: /tmp/results
          dest: ../tests_results/latency/hyp_svtrace.record
          mode: pull
        when: enable_bpftrace is defined and enable_bpftrace|bool == true

- name: Cleanup bpftrace on subscriber
  become: true
  hosts:
    - subscriber
  tasks:
      - name: End svtrace
        command:
            killall --wait "svtrace.py" --signal SIGINT
        when: enable_bpftrace is defined and enable_bpftrace|bool == true
      - name: Fetch svtrace result file
        synchronize:
          src: /tmp/results
          dest: ../tests_results/latency/sub_svtrace.record
          mode: pull
        when: enable_bpftrace is defined and enable_bpftrace|bool == true
